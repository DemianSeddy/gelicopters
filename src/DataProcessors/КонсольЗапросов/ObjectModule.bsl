#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область РАБОТА_С_XML_ФАЙЛАМИ
// Записывает Запросы(текст и параметры запроса) в файл XML.
//
// Параметры:
//	ИмяФайла - имя файла XML.
//	Объект - передаваемый объект обработки.
//
Функция ЗаписатьЗапросыВФайлXML(знач Объект) Экспорт
	
	ФайлXML = Новый ЗаписьXML;
	ИмяФайла = ПолучитьИмяВременногоФайла("q1c");
	ФайлXML.ОткрытьФайл(ИмяФайла);
	ФайлXML.ЗаписатьОбъявлениеXML();
	ФайлXML.ЗаписатьНачалоЭлемента("querylist");
	// Цикл запросов.
	Для каждого ТекЗапрос Из Объект.Запросы Цикл
		ФайлXML.ЗаписатьНачалоЭлемента("query");
		ФайлXML.ЗаписатьАтрибут("name", ТекЗапрос.Имя);
			ФайлXML.ЗаписатьНачалоЭлемента("text");
			ТекстЗапроса = ТекЗапрос.Текст;
			Для Счетчик = 1 По СтрЧислоСтрок(ТекстЗапроса) Цикл
				ПереносСтр	= Символы.ВК + Символы.ПС;
				ТекСтрока 	= СтрПолучитьСтроку(ТекстЗапроса, Счетчик);
				ФайлXML.ЗаписатьТекст(ТекСтрока);
				ФайлXML.ЗаписатьБезОбработки(ПереносСтр);
			КонецЦикла;
			ФайлXML.ЗаписатьКонецЭлемента();
			ИдентификаторЗапроса = ТекЗапрос.Идентификатор;
			// Запись параметров в XML-файл.
			Если Объект.Параметры.Количество() > 0 Тогда 
				ФайлXML.ЗаписатьНачалоЭлемента("parameters");
				Для каждого ТекПараметр Из Объект.Параметры Цикл 
					Если ТекПараметр.ИдентификаторЗапроса = ИдентификаторЗапроса Тогда 
						ИмяПараметра		= ТекПараметр.Имя;
						ТипПараметра		= ТекПараметр.Тип;
						Значение			= ТекПараметр.Значение;
						Если ПустаяСтрока(Значение) Тогда
							ЗначениеПараметра = ""; 
						Иначе
							ЗначениеПараметра = ЗначениеИзСтрокиВнутр(ТекПараметр.Значение);
						КонецЕсли;	
						
						ФайлXML.ЗаписатьНачалоЭлемента("parameter");
						ФайлXML.ЗаписатьАтрибут("name", ИмяПараметра);
						Если ТипПараметра = "СписокЗначений" Тогда 
							ФайлXML.ЗаписатьАтрибут("type", ТипПараметра);
							ЗаписатьСписокЗначенийВXML(ФайлXML, ЗначениеПараметра);
						ИначеЕсли ТипПараметра = "ТаблицаЗначений" Тогда
							ФайлXML.ЗаписатьАтрибут("type", ТипПараметра);
							Если не ЗначениеЗаполнено(ЗначениеПараметра) Тогда
								ЗначениеПараметра = Новый ТаблицаЗначений;
							КонецЕсли;
							
							Колонки = ЗначениеПараметра.Колонки.Количество();
							Строки = ЗначениеПараметра.Количество();
							
							ФайлXML.ЗаписатьАтрибут("colcount", XMLСтрока(Колонки));
							ФайлXML.ЗаписатьАтрибут("rowcount", XMLСтрока(Строки));
							
							ЗаписатьТаблицуЗначенийВXML(ФайлXML, ЗначениеПараметра);
						ИначеЕсли ТипПараметра = "МоментВремени" Тогда
							ФайлXML.ЗаписатьАтрибут("type", ТипПараметра);
							Если не ЗначениеЗаполнено(ЗначениеПараметра) Тогда
								ЗначениеПараметра = Новый МоментВремени(ТекущаяДата());
							КонецЕсли;

							ЗаписатьМоментВремениВXML(ФайлXML, ЗначениеПараметра);
						ИначеЕсли ТипПараметра = "Граница" Тогда
							ФайлXML.ЗаписатьАтрибут("type", ТипПараметра);
							Если не ЗначениеЗаполнено(ЗначениеПараметра) Тогда
								ЗначениеПараметра = Новый Граница(ТекущаяДата());
							КонецЕсли;

							ЗаписатьГраницуВXML(ФайлXML, ЗначениеПараметра);
						Иначе
							ИмяТипа = ИмяТипаИзЗначения(ЗначениеПараметра); 
							ФайлXML.ЗаписатьАтрибут("type", ИмяТипа);
							ФайлXML.ЗаписатьАтрибут("value", XMLСтрока(ЗначениеПараметра));
						КонецЕсли;	
						ФайлXML.ЗаписатьКонецЭлемента();
					КонецЕсли;	
				КонецЦикла;	
				ФайлXML.ЗаписатьКонецЭлемента();
			КонецЕсли;	
		ФайлXML.ЗаписатьКонецЭлемента();
	КонецЦикла;	
	ФайлXML.ЗаписатьКонецЭлемента();
	ФайлXML.Закрыть();
	
	ВозвращаемоеЗначение = Новый ДвоичныеДанные(ИмяФайла);
	
	УдалитьФайлы(ИмяФайла);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Записывает строки списка значений в Файл XML.
//
// Параметры:
//	ФайлXML - записьXML.
//	Значение - список значений.
//
Процедура ЗаписатьСписокЗначенийВXML(ФайлXML, Значение)
	Если ТипЗнч(Значение) <> Тип("СписокЗначений") Тогда 
		Возврат;
	КонецЕсли;	
	
	Для каждого СтрСписка Из Значение Цикл
		ЗначениеЭлементаСписка	= СтрСписка.Значение;
		// Определение имени типа.
		ИмяТипа = ИмяТипаИзЗначения(ЗначениеЭлементаСписка); 
		
		ФайлXML.ЗаписатьНачалоЭлемента("item");
			ФайлXML.ЗаписатьАтрибут("type", ИмяТипа);
			ФайлXML.ЗаписатьАтрибут("value", XMLСтрока(ЗначениеЭлементаСписка));
		ФайлXML.ЗаписатьКонецЭлемента();
	КонецЦикла;
КонецПроцедуры

// Записывает ячейки таблицы значений в Файл XML.
//
// Параметры:
//	ФайлXML - записьXML.
//	Значение - таблица значений.
//
Процедура ЗаписатьТаблицуЗначенийВXML(ФайлXML, Значение)
	Если ТипЗнч(Значение) <> Тип("ТаблицаЗначений") Тогда 
		Возврат;
	КонецЕсли;
	
	КолКолонок 	= Значение.Колонки.Количество();
	КолСтрок	= Значение.Количество();
	
	Для СтрокаИндекс = 0 По КолСтрок - 1 Цикл
		Для КолонкаИндекс = 0 По КолКолонок - 1 Цикл 
			ЗначениеЭлементаСписка	= Значение.Получить(СтрокаИндекс).Получить(КолонкаИндекс);
			ИмяКолонки = Значение.Колонки.Получить(КолонкаИндекс).Имя;
			// Определение имени типа.
			ИмяТипа = ИмяТипаИзЗначения(ЗначениеЭлементаСписка); 
			Если ИмяТипа = "Строка" Тогда 
				Длина = Значение.Колонки.Получить(КолонкаИндекс).ТипЗначения.КвалификаторыСтроки.Длина; 	
			Иначе 
				Длина = 0;
			КонецЕсли; 
			
			ФайлXML.ЗаписатьНачалоЭлемента("item");
				ФайлXML.ЗаписатьАтрибут("nameCol", ИмяКолонки);
				ФайлXML.ЗаписатьАтрибут("row", XMLСтрока(СтрокаИндекс));
				ФайлXML.ЗаписатьАтрибут("col", XMLСтрока(КолонкаИндекс));
				ФайлXML.ЗаписатьАтрибут("type", ИмяТипа);
				ФайлXML.ЗаписатьАтрибут("length", XMLСтрока(Длина));
				ФайлXML.ЗаписатьАтрибут("value", XMLСтрока(ЗначениеЭлементаСписка));
			ФайлXML.ЗаписатьКонецЭлемента();
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

// Записывает момент времени в Файл XML.
//
// Параметры:
//	ФайлXML - записьXML.
//	Значение - момент времени.
//
Процедура ЗаписатьМоментВремениВXML(ФайлXML, Значение)
	Если ТипЗнч(Значение) <> Тип("МоментВремени") Тогда 
		Возврат;
	КонецЕсли;
	
	// Определение имени типа.
	ИмяТипа = ИмяТипаИзЗначения(Значение.Ссылка); 
	
	ФайлXML.ЗаписатьНачалоЭлемента("item");
		Если Значение.Ссылка <> Неопределено Тогда 
			ФайлXML.ЗаписатьАтрибут("type", ИмяТипа);
			ФайлXML.ЗаписатьАтрибут("valueRef", XMLСтрока(Значение.Ссылка));
		КонецЕсли;	
		ФайлXML.ЗаписатьАтрибут("valueDate", XMLСтрока(Значение.Дата));
	ФайлXML.ЗаписатьКонецЭлемента();
КонецПроцедуры	

// Записывает границу.
//
Процедура ЗаписатьГраницуВXML(ФайлXML, Граница)
	Если ТипЗнч(Граница) <> Тип("Граница") Тогда
		Возврат;
	КонецЕсли;
	
	ФайлXML.ЗаписатьНачалоЭлемента("divide");
		// Определение имени типа.
		ИмяТипа 			= ИмяТипаИзЗначения(Граница.Значение); 
		ТипЗначенияГраницы 	= ТипЗнч(Граница.Значение);
		
		// Запись в строку вида границы.
		ИмяВидаГраницы = Строка(Граница.ВидГраницы);
		
		ФайлXML.ЗаписатьАтрибут("type", ИмяТипа);
		ФайлXML.ЗаписатьАтрибут("valueDiv", ИмяВидаГраницы);
		
		Если ТипЗначенияГраницы <> Тип("МоментВремени") Тогда 
			ФайлXML.ЗаписатьАтрибут("value", XMLСтрока(Граница.Значение));
		Иначе
			ЗаписатьМоментВремениВXML(ФайлXML, Граница.Значение);
		КонецЕсли;
	ФайлXML.ЗаписатьКонецЭлемента();
КонецПроцедуры	

// Читает Запросы(текст и параметры) из XML-файла.
//
Функция ПрочитатьЗапросыИзФайлаXML(ДвоичныеДанные) Экспорт
	Объект = ЭтотОбъект;
	ИмяФайла = ПолучитьИмяВременногоФайла("q1c");
	ДвоичныеДанные.Записать(ИмяФайла);
	ФайлXML = Новый ЧтениеXML;
	ФайлXML.ОткрытьФайл(ИмяФайла);
	ФайлXML.Прочитать();
	// Чтение всех запросов.
	Если ФайлXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ФайлXML.Имя = "querylist" Тогда
		Пока ФайлXML.Прочитать() Цикл 
			// Чтение запроса.
			Если ФайлXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ФайлXML.Имя = "query" Тогда 
				Пока ФайлXML.ПрочитатьАтрибут() Цикл 
					Если ФайлXML.Имя = "name" Тогда
						// Добавление запроса в таблицу.
						текЭлементЗапроса 				= Запросы.Добавить();
						текЭлементЗапроса.Идентификатор	= Новый УникальныйИдентификатор;
						текЭлементЗапроса.Имя 			= ФайлXML.Значение;
					КонецЕсли;	
				КонецЦикла;	
				Пока ФайлXML.Прочитать() Цикл 
					Если ФайлXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ФайлXML.Имя = "text" Тогда 
						ФайлXML.Прочитать();
						текЭлементЗапроса.Текст = ФайлXML.Значение;
					// Чтение параметров.
					КонецЕсли;
					Если ФайлXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ФайлXML.Имя = "parameters" Тогда
						Пока ФайлXML.Прочитать() Цикл
							// Чтение отдельного параметра.
							Если ФайлXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ФайлXML.Имя = "parameter" Тогда
								Пока ФайлXML.ПрочитатьАтрибут() Цикл 
									// Чтение имени атрибута.									
									Если ФайлXML.Имя = "name" Тогда
										текПараметрЗапроса 						= Параметры.Добавить();
										текПараметрЗапроса.Идентификатор  		= Новый УникальныйИдентификатор;
										текПараметрЗапроса.Имя					= ФайлXML.Значение;
										текПараметрЗапроса.ИдентификаторЗапроса	= текЭлементЗапроса.Идентификатор;
									КонецЕсли;
									
									// Чтение типа параметра.
									Если ФайлXML.Имя = "type" Тогда
										Если Не ЗначениеЗаполнено(ФайлXML.Значение) Тогда
											ТипЭлемента = Неопределено;
										Иначе
											ТипЭлемента = Тип(ФайлXML.Значение);
										КонецЕсли;
										
										текПараметрЗапроса.Тип	= Строка(ФайлXML.Значение);
									КонецЕсли;
									
									// Чтение значения параметра.
									Если ФайлXML.Имя = "value" Тогда
										Если не ЗначениеЗаполнено(ТипЭлемента) Тогда
											Значение					= "";
										Иначе
											Значение					= XMLЗначение(ТипЭлемента, ФайлXML.Значение);
										КонецЕсли;
										
										текПараметрЗапроса.Значение = ЗначениеВСтрокуВнутр(Значение);
									КонецЕсли;
									
									// Чтение количества колонок Таблицы Значений.
									Если ФайлXML.Имя = "colcount" Тогда
										КоличествоКолонок 	= Число(ФайлXML.Значение);
									КонецЕсли;
									
									// Чтение количества строк Таблицы Значений.
									Если ФайлXML.Имя = "rowcount" Тогда
										КоличествоСтрок 	= Число(ФайлXML.Значение);
									КонецЕсли;
								КонецЦикла;
								
								// Чтение отдельных типов.
								// Для отдельных типов предусмотрено индивидуальное чтение параметров.
								// Под отдельными типами понимаются: Список значений, Таблица значений, 
								// Момент Времени, Граница.
								//
								// Список отдельных типов может увеличиваться.
								Если текПараметрЗапроса.Тип = "СписокЗначений" Тогда
									ПрочитатьСписокЗначенийИзXML(ФайлXML, текПараметрЗапроса);
								КонецЕсли; 
								Если текПараметрЗапроса.Тип = "ТаблицаЗначений" Тогда
									Если КоличествоКолонок > 0 Тогда 
										ПрочитатьТаблицуЗначенийИзXML(ФайлXML, текПараметрЗапроса, КоличествоСтрок, КоличествоКолонок);
									КонецЕсли;	
								КонецЕсли;
								Если текПараметрЗапроса.Тип = "МоментВремени" Тогда
									ПрочитатьМоментВремениИзXML(ФайлXML, текПараметрЗапроса);
								КонецЕсли;
								Если текПараметрЗапроса.Тип = "Граница" Тогда
									ПрочитатьГраницуИзXML(ФайлXML, текПараметрЗапроса);
								КонецЕсли;
							КонецЕсли;
							Если ПроверкаКонцаТэгов(ФайлXML) Тогда
								Прервать;
							КонецЕсли;	
						КонецЦикла;	
					КонецЕсли;	
					Если ПроверкаКонцаТэгов(ФайлXML) Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла; // Обход по тэгам "query".
			КонецЕсли; // Если "query".
		КонецЦикла; // Обход по запросам.
	КонецЕсли; // Если "querylist".
	ФайлXML.Закрыть();
	Возврат ЭтотОбъект;
КонецФункции

// Читает Список значений.
//
// Параметры:
//	ФайлXML - Чтение XML.
//	ПараметрЗапроса - текущий параметр.
//
Процедура ПрочитатьСписокЗначенийИзXML(ФайлXML, ПараметрЗапроса)
	СписокЗН = Новый СписокЗначений;
	Пока ФайлXML.Прочитать() Цикл 
		Если ФайлXML.Имя = "item" И ФайлXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда 
			Пока ФайлXML.ПрочитатьАтрибут() Цикл
				Если ФайлXML.Имя = "type" Тогда
					ТипЭлемента = Тип(ФайлXML.Значение);
				КонецЕсли;
				Если ФайлXML.Имя = "value" Тогда
					// Чтение значения.
					Значение				= XMLЗначение(ТипЭлемента, ФайлXML.Значение);
					ЗначениеЭлементаСписка 	= Значение;
				КонецЕсли;	
			КонецЦикла;	
			СписокЗН.Добавить(ЗначениеЭлементаСписка);
		ИначеЕсли ФайлXML.Имя <> "item" Тогда 
			Прервать;
		КонецЕсли;	
	КонецЦикла;
	ПараметрЗапроса.Значение			= ЗначениеВСтрокуВнутр(СписокЗН);
КонецПроцедуры	

// Читает Таблицу значений.
//
// Параметры:
//	ФайлXML - Чтение XML.
//	ПараметрЗапроса - текущий параметр.
//	КоличествоСтрок - количество строк.
//	КоличествоКолонок - количество колонок.
//
Процедура ПрочитатьТаблицуЗначенийИзXML(ФайлXML, ПараметрЗапроса, КоличествоСтрок, КоличествоКолонок)
	ТаблицаЗначений = Новый ТаблицаЗначений;
	МассивКолонок = Новый Массив;
	
	Пока ФайлXML.Прочитать() Цикл 
		Если ФайлXML.Имя = "item" И ФайлXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда 
			Пока ФайлXML.ПрочитатьАтрибут() Цикл
				Если ФайлXML.Имя = "col" Тогда
					ИндексКолонки 	= Число(ФайлXML.Значение);
				КонецЕсли;
				Если ФайлXML.Имя = "row" Тогда
					ИндексСтроки 	= Число(ФайлXML.Значение);
				КонецЕсли;
				Если ФайлXML.Имя = "type" Тогда
					ТипЭлемента = Тип(ФайлXML.Значение);
					МассивТипов = Новый Массив;
					МассивТипов.Добавить(ТипЭлемента);
				КонецЕсли;
				Если ФайлXML.Имя = "nameCol" Тогда
					ИмяКолонки	 = ФайлXML.Значение;
				КонецЕсли;
				Если ФайлXML.Имя = "length" Тогда
					Длина		 = ФайлXML.Значение;
				КонецЕсли;
				Если ФайлXML.Имя = "value" Тогда
					Значение		= XMLЗначение(ТипЭлемента, ФайлXML.Значение);
					ЗначениеЯчейки 	= Значение;
				КонецЕсли;
			КонецЦикла;	
			
			ПараметрыСтроки = Новый КвалификаторыСтроки(Длина);
			Если МассивКолонок.Количество() - 1 < ИндексКолонки Тогда
				ОписаниеТипов = Новый ОписаниеТипов();
				ОписаниеТипов = Новый ОписаниеТипов(ОписаниеТипов, МассивТипов,,, ПараметрыСтроки);
				
				СписокЗначенийЯчеекКолонки  = Новый СписокЗначений;
				СписокЗначенийЯчеекКолонки.Вставить(ИндексСтроки,ЗначениеЯчейки);
				
				СтруктураКолонки = Новый Структура;
				СтруктураКолонки.Вставить("Имя", ИмяКолонки);
				СтруктураКолонки.Вставить("ОписаниеТипов", ОписаниеТипов);
				СтруктураКолонки.Вставить("СписокЗначенийЯчеекКолонки", СписокЗначенийЯчеекКолонки);
				
				МассивКолонок.Вставить(ИндексКолонки, СтруктураКолонки);
			Иначе
				Имя = МассивКолонок.Получить(ИндексКолонки).Имя;
				ОписаниеТипов = МассивКолонок.Получить(ИндексКолонки).ОписаниеТипов;
				ОписаниеТипов = Новый ОписаниеТипов(ОписаниеТипов, МассивТипов,,, ПараметрыСтроки);
				СписокЗначенийЯчеекКолонки  = МассивКолонок.Получить(ИндексКолонки).СписокЗначенийЯчеекКолонки;
				СписокЗначенийЯчеекКолонки.Вставить(ИндексСтроки,ЗначениеЯчейки);
				
				МассивКолонок.Удалить(ИндексКолонки);
				СтруктураКолонки = Новый Структура;
				СтруктураКолонки.Вставить("Имя", ИмяКолонки);
				СтруктураКолонки.Вставить("ОписаниеТипов", ОписаниеТипов);
				СтруктураКолонки.Вставить("СписокЗначенийЯчеекКолонки", СписокЗначенийЯчеекКолонки);
				МассивКолонок.Вставить(ИндексКолонки, СтруктураКолонки);
			КонецЕсли;	
		ИначеЕсли ФайлXML.Имя <> "item" Тогда
			Прервать;
		КонецЕсли;	
	КонецЦикла;
	
	КолКолонок = МассивКолонок.Количество();
	Для ИндексКолонок = 0 По КолКолонок - 1 Цикл 
		ИмяКолонки 		= МассивКолонок.Получить(ИндексКолонок).Имя;
		ТипКолонки 		= МассивКолонок.Получить(ИндексКолонок).ОписаниеТипов;
		ТаблицаЗначений.Колонки.Вставить(ИндексКолонок, ИмяКолонки, ТипКолонки, ИмяКолонки);
		
		СписокЗначений 	= МассивКолонок.Получить(ИндексКолонок).СписокЗначенийЯчеекКолонки;
		КолСтрок = СписокЗначений.Количество();
		Для ИндексСтрок = 0 По КолСтрок - 1 Цикл 
			ЗначениеЯчейки = СписокЗначений.Получить(ИндексСтрок).Значение;
			Если ИндексСтрок <= ТаблицаЗначений.Количество() - 1 Тогда 
				ТаблицаЗначений.Получить(ИндексСтрок).Установить(ИндексКолонок, ЗначениеЯчейки);
			Иначе
				ТаблицаЗначений.Вставить(ИндексСтрок).Установить(ИндексКолонок, ЗначениеЯчейки);
			КонецЕсли;	
		КонецЦикла;	
	КонецЦикла;
	
	ПараметрЗапроса.Значение			= ЗначениеВСтрокуВнутр(ТаблицаЗначений);
КонецПроцедуры	

// Читает Момент времени.
//
// Параметры:
//	ФайлXML - Чтение XML.
//	ПараметрЗапроса - текущий параметр.
//
Процедура ПрочитатьМоментВремениИзXML(ФайлXML, ПараметрЗапроса)
	Пока ФайлXML.Прочитать() Цикл 
		Если ФайлXML.Имя = "item" И ФайлXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда 
			Пока ФайлXML.ПрочитатьАтрибут() Цикл
				Если ФайлXML.Имя = "type" Тогда
					ТипЭлемента = Тип(ФайлXML.Значение);
				КонецЕсли;
				Если ФайлXML.Имя = "valueRef" Тогда
					ЗначениеСсылки	= XMLЗначение(ТипЭлемента, ФайлXML.Значение);
				КонецЕсли;
				Если ФайлXML.Имя = "valueDate" Тогда
					ЗначениеДаты	= XMLЗначение(Тип("Дата"), ФайлXML.Значение);
				КонецЕсли;
			КонецЦикла;	
			МВ = Новый МоментВремени(ЗначениеДаты, ЗначениеСсылки);
		ИначеЕсли ФайлXML.Имя <> "item" Тогда 
			Прервать;
		КонецЕсли;	
	КонецЦикла;
	ПараметрЗапроса.Значение	= ЗначениеВСтрокуВнутр(МВ);
КонецПроцедуры	

// Читает Границу.
//
// Параметры:
//	ФайлXML - Чтение XML.
//	ПараметрЗапроса - текущий параметр.
//
Процедура ПрочитатьГраницуИзXML(ФайлXML, ПараметрЗапроса)
	Пока ФайлXML.Прочитать() Цикл 
		Если ФайлXML.Имя = "divide" И ФайлXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда 
			Пока ФайлXML.ПрочитатьАтрибут() Цикл
				Если ФайлXML.Имя = "type" Тогда
					ТипЭлемента = Тип(ФайлXML.Значение);
				КонецЕсли;
				Если ФайлXML.Имя = "value" Тогда
					Значение	= XMLЗначение(ТипЭлемента, ФайлXML.Значение);
				КонецЕсли;
				Если ФайлXML.Имя = "valueDiv" Тогда
					Вид	= XMLЗначение(Тип("Строка"), ФайлXML.Значение);
					Вид	= ОпределениеВидаГраницы(Вид);
				КонецЕсли;
			КонецЦикла;	
			Если ТипЭлемента = Тип("МоментВремени") Тогда 
				ПрочитатьМоментВремениИзXML(ФайлXML, ПараметрЗапроса);
				Значение = ЗначениеИзСтрокиВнутр(ПараметрЗапроса.Значение);
			КонецЕсли;	
			
			Граница = Новый Граница(Значение, Вид);
		ИначеЕсли ФайлXML.Имя <> "divide" Тогда 
			Прервать;
		КонецЕсли;	
	КонецЦикла;
	ПараметрЗапроса.Значение	= ЗначениеВСтрокуВнутр(Граница);
КонецПроцедуры	

// Определяет условие конца тэга "query" или "parameters".
//
// Параметры:
//	ФайлXML - чтениеXML.
//
Функция ПроверкаКонцаТэгов(ФайлXML)
	Если (ФайлXML.ТипУзла = ТипУзлаXML.КонецЭлемента И ФайлXML.Имя = "query") 
		Или (ФайлXML.ТипУзла = ТипУзлаXML.КонецЭлемента И ФайлXML.Имя = "parameters") Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

// Возвращает строковое представление типа по значению.
//
// Параметры:
//	Значение - передаваемое значение.
//
Функция ИмяТипаИзЗначения(Значение) Экспорт
	Если ТипЗнч(Значение) = Тип("Строка") Тогда
		ИмяТипа = "Строка";
	ИначеЕсли ТипЗнч(Значение) = Тип("Число") Тогда
		ИмяТипа = "Число";
	ИначеЕсли ТипЗнч(Значение) = Тип("Булево") Тогда
		ИмяТипа = "Булево";
	ИначеЕсли ТипЗнч(Значение) = Тип("Дата") Тогда
		ИмяТипа = "Дата";
	ИначеЕсли ТипЗнч(Значение) = Тип("МоментВремени") Тогда
		ИмяТипа = "МоментВремени";
	ИначеЕсли ТипЗнч(Значение) = Тип("Неопределено") Тогда
		ИмяТипа = "";
	Иначе	
		ИмяТипа = xmlТип(ТипЗнч(Значение)).ИмяТипа;
	КонецЕсли;
	
	Возврат ИмяТипа;
КонецФункции

// Возвращает вид границы из ее строкового представления.
//
// Параметры:
//	Вид - строковое представление вида границы.
//
Функция ОпределениеВидаГраницы(Вид) Экспорт
	Если ВРег(Вид) = "ИСКЛЮЧАЯ" Тогда
		Результат = ВидГраницы.Исключая;
	Иначе
		Результат = ВидГраницы.Включая;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

#КонецОбласти

#КонецЕсли
