&НаКлиенте
Процедура ВыбратьИЗакрыть(Команда)
	
	Владелец = ЭтотОбъект.ВладелецФормы;
	ПараметрыПередачи = ПолучитьЗначениеСервер(Владелец.УникальныйИдентификатор);
	Закрыть(ПараметрыПередачи); 
	Владелец.Модифицированность = Истина;

КонецПроцедуры

&НаСервере
Функция ПолучитьЗначениеСервер(ВладелецУникальныйИдентификатор)
	
	ДеревоТиповДерево = РеквизитФормыВЗначение("ДеревоТипов");
	ВыделеннаяСтрока = ДеревоТиповДерево.Строки.Найти(Истина, "Выбран", Истина);
	МетаданныеАдресХранилища = ПоместитьВоВременноеХранилище(ДеревоТиповДерево, ВладелецУникальныйИдентификатор);
	
	Если ВыделеннаяСтрока = Неопределено Тогда
		Возврат Новый Структура("Значение, Представление, МетаданныеАдресХранилища", Неопределено, Неопределено, МетаданныеАдресХранилища);
	КонецЕсли;
	
	Возврат Новый Структура("Значение, Представление, МетаданныеАдресХранилища", ВыделеннаяСтрока.Имя, ВыделеннаяСтрока.Представление, МетаданныеАдресХранилища);
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("МетаданныеАдресХранилища") И ЗначениеЗаполнено(Параметры.МетаданныеАдресХранилища) Тогда
		ДеревоТиповДерево = ПолучитьИзВременногоХранилища(Параметры.МетаданныеАдресХранилища);
		Если ТипЗнч(ДеревоТиповДерево) <> Тип("ДеревоЗначений") Или ДеревоТиповДерево.Строки.Количество() = 0 Тогда
			ЗаполнитьДеревоТипов();
		Иначе
			СнятьФлажкиРекурсивноСервер(ДеревоТиповДерево.Строки);
			ЗначениеВРеквизитФормы(ДеревоТиповДерево, "ДеревоТипов");
		КонецЕсли;
	Иначе
		ЗаполнитьДеревоТипов();
	КонецЕсли;

КонецПроцедуры

&НаСервере 
Процедура ЗаполнитьДеревоТипов()
	ДеревоТиповДерево = РеквизитФормыВЗначение("ДеревоТипов");
	
	ДобавитьТип(ДеревоТиповДерево, "Число", "Число");
	ДобавитьТип(ДеревоТиповДерево, "Строка", "Строка");
	ДобавитьТип(ДеревоТиповДерево, "Дата", "Дата");
	ДобавитьТип(ДеревоТиповДерево, "Булево", "Булево");
	ДобавитьТип(ДеревоТиповДерево, "ТаблицаЗначений", "Таблица значений");
	ДобавитьТип(ДеревоТиповДерево, "СписокЗначений", "Список значений");
	ДобавитьТип(ДеревоТиповДерево, "МоментВремени", "Момент времени");
	ДобавитьТип(ДеревоТиповДерево, "Граница", "Граница");
	
	ДобавитьТип(ДеревоТиповДерево, "Справочники", "СправочникСсылка", Истина, "Справочник");
	ДобавитьТип(ДеревоТиповДерево, "Документы","ДокументСсылка", Истина, "Документ");
	ДобавитьТип(ДеревоТиповДерево, "Перечисления","ПеречислениеСсылка", Истина, "Перечисление");
	ДобавитьТип(ДеревоТиповДерево, "ПланыВидовХарактеристик","ПланВидовХарактеристикСсылка", Истина, "ПланВидовХарактеристик");
	ДобавитьТип(ДеревоТиповДерево, "ПланыСчетов","ПланСчетовСсылка", Истина, "ПланСчетов");
	ДобавитьТип(ДеревоТиповДерево, "ПланыВидовРасчета","ПланВидовРасчетаСсылка", Истина, "ПланВидовРасчета");
	ДобавитьТип(ДеревоТиповДерево, "БизнесПроцессы","БизнесПроцессСсылка", Истина, "БизнесПроцесс");
	ДобавитьТип(ДеревоТиповДерево, "Задачи","ЗадачакСсылка", Истина, "Задача");
	
	ЗначениеВРеквизитФормы(ДеревоТиповДерево, "ДеревоТипов");
КонецПроцедуры

&НаСервере
Процедура ДобавитьТип(ДеревоТиповДерево, ИмяТипа, ПредставлениеТипа = "", ЭтоВеткаМетаданных = Ложь, ИмяКартинки = Неопределено)
	
	НовСтрока = ДеревоТиповДерево.Строки.Добавить();
	НовСтрока.Имя = ИмяТипа;
	Если ЗначениеЗаполнено(ИмяКартинки) Тогда
		Картинка = БиблиотекаКартинок[ИмяКартинки];
		НовСтрока.Картинка = Картинка;
	КонецЕсли;
	
	Если ЭтоВеткаМетаданных Тогда
		
		НовСтрока.Представление = ИмяТипа;
		НовСтрока.ЭтоМетаданные = Истина;
		
		Для Каждого Метаданное Из Метаданные[ИмяТипа] Цикл
			НовПодСтрока = НовСтрока.Строки.Добавить();
			НовПодСтрока.Имя = ПредставлениеТипа + "." +Метаданное.Имя; 
			НовПодСтрока.Представление = Метаданное.Имя;
			НовПодСтрока.Картинка = Картинка;
		КонецЦикла;
		
		НовСтрока.Строки.Сортировать("Имя");
	Иначе
		
		НовСтрока.Представление = ПредставлениеТипа;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДеревоТиповВыбранПриИзменении(Элемент)
	
	ТекДанные = Элементы.ДеревоТипов.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СнятьФлажкиРекурсивно(ДеревоТипов.ПолучитьЭлементы());
	
	ТекДанные.Выбран = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиРекурсивно(СтрокиДерева)
	
	Для каждого Строка Из СтрокиДерева Цикл
		Строка.Выбран = Ложь;
		СнятьФлажкиРекурсивно(Строка.ПолучитьЭлементы());
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СнятьФлажкиРекурсивноСервер(СтрокиДерева)
	
	Для каждого Строка Из СтрокиДерева Цикл
		Строка.Выбран = Ложь;
		СнятьФлажкиРекурсивноСервер(Строка.Строки);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоТиповПередНачаломИзменения(Элемент, Отказ)
	Если Элемент.ТекущиеДанные.ЭтоМетаданные Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры
